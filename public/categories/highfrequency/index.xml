<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>highfrequency on Rock &#39;n&#39; Roh</title>
    <link>https://rockandroh.netlify.app/categories/highfrequency/</link>
    <description>Recent content in highfrequency on Rock &#39;n&#39; Roh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://rockandroh.netlify.app/categories/highfrequency/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>주식데이터 Cleaning 및 Manipulating</title>
      <link>https://rockandroh.netlify.app/blog/kiwoom-data-cleaning-example/</link>
      <pubDate>Wed, 10 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://rockandroh.netlify.app/blog/kiwoom-data-cleaning-example/</guid>
      <description>유사한 데이터를 만들어 봅시다 특정시간 뽑아내기 필요한 틱커만 뽑아내기 (a,b,c) 티커로 스플릿 후 리스트 만들기 각 티커별 추가 변수 생성 특정 시간(e.g. 90초) 에 맞춰 OHLC-V 만들기 특정 시간(e.g. 90초)에 맞춰 Aggreagte 하기 OHLCV랑 Agg 합치기 OHLCV랑 Agg 합치기 특정시각 (9시 1분 30초) 데이터만 뽑아내기 특정변수() 데이터만 뽑아내기 뽑아낸 변수 데이터 Time Varying 순위 매기기   body, td { font-size: 20px; } code.r{ font-size: 12px; } pre { font-size: 18px }  Note: 키움 데이터 클리닝 예제입니다.</description>
    </item>
    
    <item>
      <title>GME Jan 28 사건 재구성</title>
      <link>https://rockandroh.netlify.app/blog/gme-jan-28/</link>
      <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://rockandroh.netlify.app/blog/gme-jan-28/</guid>
      <description>Note: 사건재구성 1편: 게임스탁 편 입니다. 오류 및 문의사항은 metrics@kakao.com 으로 메일주시면 감사하겠습니다
안녕하세요! Roboticks입니다. 첫주제는 최근에 핫한 GAMESTOP $GME에 관한 이야기입니다. 게임스탑에 관련한 숏스퀴즈, Reddit, 시타델, 로빈후드 등에 관한 정보와 설명은 유투브에 이미 많은 분들이 커버하였습니다. 저희 또한 이사태를 흥미롭게 지켜봤는데, 지금은 사태가 일단락 되는 것 같습니다. 이 시점에서 논란인 많은 ‘날’ 중의 하나였던 1월 28일의 데이터를 보면서 어떤 일들이 있었는지 조금더 구체적으로 살펴보도록 하겠습니다.</description>
    </item>
    
    <item>
      <title>키움 API Tick Data - Task2</title>
      <link>https://rockandroh.netlify.app/blog/api-tick-data-task1-complete-3/</link>
      <pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://rockandroh.netlify.app/blog/api-tick-data-task1-complete-3/</guid>
      <description>TASK2: Cleaning 준비 1.타임 스탬프 Sort 하기 2. 장중 데이터만 가지고 오기 3. DATE는 날짜 TIME은 시간 4. 네이버 금융에서 주식티커 크롤링 5. Symbol 별로 분리해서 폴더에 집어넣기 Source     div.rcode pre { background-color:#fffff0; } div.rcode pre.r { background-color:#EDF6FA; }   div.pycode pre { background-color:#fffff0; } div.pycode pre.python { background-color:#FFE9E9; }  body, td { font-size: 14px; } code.r{ font-size: 12px; } pre { font-size: 12px }  Note: 이 페이지는 키움 API를 통해 Real Time Tick Data를 받아온 후 데이터를 클리닝 하는 과정을 보여주고 있습니다.</description>
    </item>
    
    <item>
      <title>키움 API Tick Data - Task1</title>
      <link>https://rockandroh.netlify.app/blog/api-tick-data-task1-complete-2/</link>
      <pubDate>Fri, 22 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://rockandroh.netlify.app/blog/api-tick-data-task1-complete-2/</guid>
      <description>Task1: 레이턴시 계산 0. Filtering Samsung Stock 1. Use time object in python 2. Calculate latency and clean it 오전 8시 9시 앞에 ’0’을 붙여주기 Latency +/- 정보 가지고 오기  Source     div.rcode pre { background-color:#fffff0; } div.rcode pre.r { background-color:#EDF6FA; }   div.pycode pre { background-color:#fffff0; } div.pycode pre.python { background-color:#FFE9E9; }  body, td { font-size: 14px; } code.r{ font-size: 12px; } pre { font-size: 12px }  Note: 이 페이지는 키움 API를 통해 Real Time Tick Data를 받아온 후 데이터를 클리닝 하는 과정을 보여주고 있습니다.</description>
    </item>
    
    <item>
      <title>Highfrequency Data Analysis - Day1</title>
      <link>https://rockandroh.netlify.app/blog/highfrequency-data-analysis-day1/</link>
      <pubDate>Thu, 21 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://rockandroh.netlify.app/blog/highfrequency-data-analysis-day1/</guid>
      <description>HW7 Question 1 Question 2 Theoretical Concept Integrated Volatility [IV] Realized Volatility [RV] Signature Plot Take log Calculate Averaged Realized Volatility Get ARVs for bid,ask,mid, and trade Plot Mystery Clue   Question 3 \(L_T^{(n,d)}\) \(\widehat{QV}\) Test  Question 4     div.rcode pre { background-color:#fffff0; } div.rcode pre.r { background-color:#EDF6FA; }   div.pycode pre { background-color:#fffff0; } div.pycode pre.python { background-color:#FFE9E9; }  body, td { font-size: 20px; } code.</description>
    </item>
    
  </channel>
</rss>
