<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data structure on Rock &#39;n&#39; Roh</title>
    <link>https://rockandroh.netlify.app/tags/data-structure/</link>
    <description>Recent content in data structure on Rock &#39;n&#39; Roh</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://rockandroh.netlify.app/tags/data-structure/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>자료구조 전반부 키워드 정리</title>
      <link>https://rockandroh.netlify.app/blog/data-structure-summary/</link>
      <pubDate>Mon, 19 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rockandroh.netlify.app/blog/data-structure-summary/</guid>
      <description>자료구조 렉쳐노트 키워드 정리 자료의 표현 소프트웨어 생명주기 알고리즘 구조체    자료구조 렉쳐노트 키워드 정리 아주 간단하게 키워드만 정리한 것이므로 내용이 많이 빈약합니다.
자료의 표현  디지털 시스템에서의 자료 표현  모든 형식의 자료를 2진수 코드로 표현하여 저장 및 처리 2진수 코드의 단위  8비트 = 2니블 = 1바이트 n개의 비트로 \(2^n\) 개의 상태표현   수치자료의 표현  10진수의 표현  존 형식 팩 형식  2진수의 정수 표현  문자자료의 표현  문자에 대한 이진수 코드를 정의하여 사용 문자에 대한 이진수 코드표  BCD코드: 6비트를 사용하여 문자표현 EBCDIC코드: 8비트를 사용하여 문자표현 ASCII코드: 7비트를 사용하여 문자표현   기타자료의 표현  논리자료 포인터 자료 문자열 자료    소프트웨어 생명주기  생명주기  요구분석 -&amp;gt; 시스템 명세 -&amp;gt; 설계 -&amp;gt; 구현 -&amp;gt; 테스트 -&amp;gt; 유지보수    알고리즘 성능분석 - 존 형식의 표현 - 공간 복잡도 - 알고리즘을 프로그램으로 실행하여 완료하기까지 필요한 총 저장 공간의 양 - 공간복잡도: 고정공간 + 가변공간 - 시간 복잡도 - 알고리즘을 프로그램으로 실행하여 완료하기까지의 총 소요시간 - 시간 복잡도 = 컴파일 시간 + 실행 시간 - Big O notation</description>
    </item>
    
  </channel>
</rss>
