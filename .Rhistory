print(tab_names)
#list_all_mac = lapply(tab_names_mac,
#                  function(x) read_excel(path = path_mac,
#                                         sheet = x,))
list_all = lapply(tab_names,
function(x) read_excel(path = path,
sheet = x,))
summary(list_all)
df1 = list_all[[1]]
glimpse(df1)
df1 %>%
# 직위가 과장이거나, 직위가 사원이고 점수가 80이상인
filter( (직위 =="과장") | (직위 == "사원" & 점수 >= 80)) %>%
# 이름, 부서명, 직위, 점수 평가열 (Column) 선택
select(이름, 부서명, 직위, 점수, 평가)
class(df1)
install.packages("formattable")
library(formattable)
blogdown:::preview_site(startup = TRUE)
library(readxl) # read excel
library(dplyr)
library(DT)
library(formattable)
library(reticulate) # Python
#py_install(packages = "matplotlib")
#py_install(packages = "pandas")
f1 = formatter("span",
style = ~ ifelse(업무수행 < 80 &
영어듣기 < 70,
style("color:red",
font.weight = "bold"),
NA
)
)
f1 = formatter("span",
style = ~ ifelse(업무수행 < 80 &
영어듣기 < 70,
style("color:red",
font.weight = "bold"),
NA
)
)
formattable(df1, target = 'row',
list(area(row = 1:nrow(df1)) ~ f1)
)
wd_mac = "~/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회"
wd = "C:/Users/ericr/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회"
fn = list.files(path = wd,
pattern = '*실습파일.xlsm')
fn_mac = list.files(path = getwd())[1]
path = paste(wd,fn,sep = '/')
path_mac = paste(wd_mac, fn_mac, sep='/')
print(path)
print(path_mac)
#tab_names_mac = excel_sheets(path_mac)
tab_names = excel_sheets(path)
print(tab_names)
#list_all_mac = lapply(tab_names_mac,
#                  function(x) read_excel(path = path_mac,
#                                         sheet = x,))
list_all = lapply(tab_names,
function(x) read_excel(path = path,
sheet = x,))
summary(list_all)
df1 = list_all[[1]]
glimpse(df1)
df1 %>%
# 직위가 과장이거나, 직위가 사원이고 점수가 80이상인
filter( (직위 =="과장") | (직위 == "사원" & 점수 >= 80)) %>%
# 이름, 부서명, 직위, 점수 평가열 (Column) 선택
select(이름, 부서명, 직위, 점수, 평가)
f1 = formatter("span",
style = ~ ifelse(업무수행 < 80 &
영어듣기 < 70,
style("color:red",
font.weight = "bold"),
NA
)
)
formattable(df1, target = 'row',
list(area(row = 1:nrow(df1)) ~ f1)
)
f1 = formatter("span",
style = ~ ifelse(업무수행 < 80 &
영어듣기 < 70,
style("color:red",
font.weight = "bold"),
NA
)
)
formattable(df1,
list(area(row = 1:nrow(df1)) ~ f1)
)
f1 = formatter("span",
style = ~ ifelse(업무수행 < 80 &
영어듣기 < 70,
style("color:red",
font.weight = "bold"),
NA
)
)
formattable(df1,
list(area(row = 1:nrow(df1)) ~ f1)
) %>% as.htmlwidget()
glimpse
---
title: R/Python 활용능력 (1)
author:
date: '2020-12-10'
slug: 데이터활용능력
categories:
- data mining
tags: []
output:
blogdown::html_page:
toc: true
toc_depth: 1
---
<style>
div.rcode pre { background-color:#fffff0; }
div.rcode pre.r { background-color:#EDF6FA; }
</style>
<style>
div.pycode pre { background-color:#fffff0; }
div.pycode pre.python { background-color:#FFE9E9; }
</style>
**이 페이지는 컵활 1급의 Excel 예제를 그대로 R과 Python에서 해보는 것을 목적으로 하고 있습니다. 오류와 수정사항 그리고 교육문의는 metrics@kakao.com으로 메일주시면 감사하겠습니다**
**R code 블럭과 Python code 블럭은 다음과 같이 색깔로 구분하겠습니다. 결과창은 동일하게 Ivory 색 블럭으로 표시됩니다.**
### 필요한 패키지 준비
```{r, warning=FALSE, message=FALSE, error=FALSE}
library(readxl) # read excel
library(dplyr)
library(DT)
library(formattable)
library(reticulate) # Python
#py_install(packages = "matplotlib")
#py_install(packages = "pandas")
```
<div class = "rcode">
```{r}
print("이것은 R 코드 입니다.")
```
</div>
<div class = "pycode">
```{python}
print("이것은 Python 코드 입니다.")
```
</div>
# 유형1
- 필터링 Filtering: 조건을 기반으로 데이터를 필터링 하기
- 직위가 과장이거나, 직위가 사원이고 점수가 80 이상인 자료의 이름, 부서명, 직위, 점수, 평가열만 순서대로 표시하시요
- 엑셀에서는 [데이터] -> [고급필터] 를 통해서 해결 가능!
- 조건부서식
- 업무수행이 80 미만이고, 영어듣기가 70 미만인 행 전체에 대해서 글꼴 스타일은 굵은글씨, 글꼴 색을 빨강으로 적용하는 조건부 서식을 작성하시오.
- 엑셀에서는 [홈] -> [조건부 서식] -> [새 규칙] -> [수식을 사용하여 서식을 지정할 셀 결정]
# R
### 모든 예제 데이터 준비
<div class = "rcode">
```{r}
wd_mac = "~/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회"
wd = "C:/Users/ericr/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회"
fn = list.files(path = wd,
pattern = '*실습파일.xlsm')
fn_mac = list.files(path = getwd())[1]
path = paste(wd,fn,sep = '/')
path_mac = paste(wd_mac, fn_mac, sep='/')
print(path)
print(path_mac)
```
</div>
- 모든 sheets을 list 안에다 집어넣기
<div class = "rcode">
```{r, warning=FALSE, message=FALSE, error=FALSE}
#tab_names_mac = excel_sheets(path_mac)
tab_names = excel_sheets(path)
print(tab_names)
#list_all_mac = lapply(tab_names_mac,
#                  function(x) read_excel(path = path_mac,
#                                         sheet = x,))
list_all = lapply(tab_names,
function(x) read_excel(path = path,
sheet = x,))
summary(list_all)
```
</div>
### 예제1 데이터 준비
<div class = "rcode">
```{r}
df1 = list_all[[1]]
head(df1)
```
</div>
### 필터링 문제풀기
- 직위가 과장이거나, 직위가 사원이고 점수가 80 이상인 자료의 이름, 부서명, 직위, 점수, 평가열만 순서대로 표시하시요
<div class = "rcode">
```{r}
df1 %>%
# 직위가 과장이거나, 직위가 사원이고 점수가 80이상인
filter( (직위 =="과장") | (직위 == "사원" & 점수 >= 80)) %>%
# 이름, 부서명, 직위, 점수 평가열 (Column) 선택
select(이름, 부서명, 직위, 점수, 평가)
```
</div>
### 조건부 서식
업무수행이 80 미만이고, 영어듣기가 70 미만인 행 전체에 대해서 글꼴 스타일은 굵은글씨, 글꼴 색을 빨강으로 적용하는 조건부 서식을 작성하시오.
<div class = "rcode">
```{r}
f1 = formatter("span",
style = ~ ifelse(업무수행 < 80 &
영어듣기 < 70,
style("color:red",
font.weight = "bold"),
NA
)
)
formattable(df1,
list(area(row = 1:nrow(df1)) ~ f1)
) %>% as.htmlwidget()
```
</div>
# Python
<div class = "pycode">
```{python}
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
df = pd.DataFrame(np.array(([1, 2, 3], [4, 5, 6])),
index=['mouse', 'rabbit'],
columns=['one', 'two', 'three'])
# select columns by name
df.filter(items=['one', 'three'])
```
```{python}
x = np.arange(0,3,0.1)
y = 1 + np.sin(2*np.pi*x)
plt.plot(x,y)
plt.show()
```
</div>
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::stop_server()
blogdown:::stop_server()
blogdown:::preview_site()
blogdown:::preview_site()
path
getwd()
setwd("D:/myblog/blog")
setwd("D:/myblog/blog")
setwd("D:/myblog/blog/content/data/2020-12-10-데이터활용능력-1")
blogdown:::preview_site()
blogdown:::stop_server()
blogdown:::stop_server()
blogdown:::preview_site()
blogdown:::preview_site()
getwd()
blogdown:::preview_site()
blogdown:::build_site()
blogdown:::build_site()
blogdown:::build_site()
blogdown:::build_site()
blogdown:::preview_site()
blogdown:::stop_server()
blogdown:::stop_server()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::build_site()
blogdown:::preview_site(startup = TRUE)
blogdown::build_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown::build_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::new_post_addin()
library(skim)
library(skimr)
install.packages('skimr')
library(skimr)
library(readxl) # read excel
library(dplyr)
library(DT)
library(formattable)
library(skimr)
library(reticulate) # Python
#py_install(packages = "matplotlib")
#py_install(packages = "pandas")
wd_mac = "~/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회"
wd = "C:/Users/ericr/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회"
fn = list.files(path = wd,
pattern = '*실습파일.xlsm')
fn_mac = list.files(path = getwd())[1]
path = paste(wd,fn,sep = '/')
path_mac = paste(wd_mac, fn_mac, sep='/')
print(path)
print(path_mac)
#tab_names_mac = excel_sheets(path_mac)
tab_names = excel_sheets(path)
print(path)
print(path)
path = paste(wd,fn,sep = '/')
print(path_mac)
print(path)
wd_mac = "~/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회"
wd = "C:/Users/ericr/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회"
fn = list.files(path = wd,
pattern = '*실습파일.xlsm')
fn_mac = list.files(path = getwd())[1]
path = paste(wd,fn,sep = '/')
path_mac = paste(wd_mac, fn_mac, sep='/')
print(path)
print(path_mac)
#tab_names_mac = excel_sheets(path_mac)
tab_names = excel_sheets(path)
print(tab_names)
#list_all_mac = lapply(tab_names_mac,
#                  function(x) read_excel(path = path_mac,
#                                         sheet = x,))
list_all = lapply(tab_names,
function(x) read_excel(path = path,
sheet = x,))
summary(list_all)
summary(list_all)
df3 = list_all[[3]]
df3
skimr::skim(df3)
df3
df3 %>%
group_by(직위, 부서코드) %>%
summarise(avg = mean())
df3 %>%
group_by(직위, 부서코드) %>%
summarise('avg' = mean())
df3
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기))
df3 %>%
group_by(부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기))
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기))
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
add_row('a')
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup() %>%
add_row('a')
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup()
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup() %>%
rbind('a')
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup() %>%
rbind(c('ALL', 'T-001',
mean(.$전산이론[.$부서코드=='T-001']),
mean(.$전산실기[.$부서코드=='T-001'])))
df3$전산이론[df3$부서코드=='T-001']
mean(df3$전산이론[df3$부서코드=='T-001'])
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup() %>%
rbind(c('ALL', 'T-001',
mean(df3$전산이론[df3$부서코드=='T-001']),
mean(df3$전산실기[df3$부서코드=='T-001'])))
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup() %>%
rbind(c('ALL', 'T-001',
mean(.$전산이론[df3$부서코드=='T-001']),
mean(df3$전산실기[df3$부서코드=='T-001'])))
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup() %>%
rbind(c('ALL', 'T-001',
mean(df3$전산이론[df3$부서코드=='T-001']),
mean(df3$전산실기[df3$부서코드=='T-001'])))
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup() %>%
rbind(c('ALL', 'T-001',
mean(df3$전산이론[df3$부서코드=='T-001']),
mean(df3$전산실기[df3$부서코드=='T-001']))) %>%
rbind(c('ALL', 'T-002',
mean(df3$전산이론[df3$부서코드=='T-002']),
mean(df3$전산실기[df3$부서코드=='T-002']))) %>%
print()
df3 = list_all[[3]]
skimr::skim(df3)
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup() %>%
rbind(c('ALL', 'T-001',
mean(df3$전산이론[df3$부서코드=='T-001']),
mean(df3$전산실기[df3$부서코드=='T-001']))) %>%
rbind(c('ALL', 'T-002',
mean(df3$전산이론[df3$부서코드=='T-002']),
mean(df3$전산실기[df3$부서코드=='T-002']))) %>%
print()
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup() %>%
rbind(c('ALL', 'T-001',
mean(df3$전산이론[df3$부서코드=='T-001']),
mean(df3$전산실기[df3$부서코드=='T-001']))) %>%
rbind(c('ALL', 'T-002',
mean(df3$전산이론[df3$부서코드=='T-002']),
mean(df3$전산실기[df3$부서코드=='T-002']))) %>%
print()
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup() %>%
rbind(c('ALL', 'T-001',
mean(df3$전산이론[df3$부서코드=='T-001']),
mean(df3$전산실기[df3$부서코드=='T-001']))) %>%
rbind(c('ALL', 'T-002',
mean(df3$전산이론[df3$부서코드=='T-002']),
mean(df3$전산실기[df3$부서코드=='T-002']))) %>%
print()
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup() %>%
rbind(c('ALL', 'T-001',
mean(df3$전산이론[df3$부서코드=='T-001']),
mean(df3$전산실기[df3$부서코드=='T-001']))) %>%
rbind(c('ALL', 'T-002',
mean(df3$전산이론[df3$부서코드=='T-002']),
mean(df3$전산실기[df3$부서코드=='T-002']))) %>%
print()
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup() %>%
rbind(c('ALL', 'T-001',
mean(df3$전산이론[df3$부서코드=='T-001']),
mean(df3$전산실기[df3$부서코드=='T-001']))) %>%
rbind(c('ALL', 'T-002',
mean(df3$전산이론[df3$부서코드=='T-002']),
mean(df3$전산실기[df3$부서코드=='T-002']))) %>%
print()
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup() %>%
rbind(df3 %>% group_by(부서코드) %>% summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기))) %>%
print()
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup() %>%
rbind( cbind('ALL', df3 %>% group_by(부서코드) %>% summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)))) %>%
print()
df3 %>% group_by(부서코드) %>% summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기))
df3 %>%
group_by(직위, 부서코드) %>%
summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)) %>%
ungroup() %>%
rbind( cbind(직위='ALL', df3 %>% group_by(부서코드) %>% summarise('전산이론평균' = mean(전산이론),
'전산실기평균' = mean(전산실기)))) %>%
print()
blogdown:::new_post_addin()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
