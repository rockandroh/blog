blogdown:::preview_site(startup = TRUE)
blogdown:::insert_image_addin()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
knitr::opts_chunk$set(collapse = TRUE)
library(Lock5Data)
install.packages('Lock5Data')
blogdown:::preview_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown:::new_post_addin()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown::stop_server()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::new_post_addin()
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site(startup = TRUE)
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
#install.packages('reticulate')
library(reticulate)
#install.packages('reticulate')
library(reticulate)
knitr::knit_engines$set(python = reticulate::eng_python)
#install.packages('reticulate')
library(reticulate)
library(knitr)
knitr::knit_engines$set(python = reticulate::eng_python)
#install.packages('reticulate')
library(reticulate)
library(knitr)
knitr::knit_engines$set(python = reticulate::eng_python)
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
#install.packages('reticulate')
library(reticulate)
use_python('/usr/bin/python3')
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
blogdown:::preview_site(startup = TRUE)
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
#install.packages('reticulate')
library(reticulate)
use_python('/usr/bin/python3')
#install.packages('reticulate')
library(reticulate)
use_python('/usr/bin/python3')
py_install(packages = "matplotlib")
#install.packages('reticulate')
library(reticulate)
#py_install(packages = "matplotlib")
use_python('/usr/bin/python3')
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
use()
#install.packages('reticulate')
library(reticulate)
#py_install(packages = "matplotlib")
#use_python('/usr/bin/python3')
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
#install.packages('reticulate')
library(reticulate)
knitr::knit_engines$set(python = reticulate::eng_python)
#py_install(packages = "matplotlib")
#use_python('/usr/bin/python3')
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
# boxplots and t-tests for the 4 variables at once
for (i in 1:2) { # variables to compare are variables 1 to 4
boxplot(dat[, i] ~ dat$Species, # draw boxplots by group
ylab = names(dat[i]), # rename y-axis with variable's name
xlab = "Species"
)
print(t.test(dat[, i] ~ dat$Species)) # print results of t-test
}
# R code example
dat <- iris
# remove one level to have only two groups
dat <- subset(dat, Species != "setosa")
dat$Species <- factor(dat$Species)
dim(dat)
summary(dat)
# boxplots and t-tests for the 4 variables at once
for (i in 1:2) { # variables to compare are variables 1 to 4
boxplot(dat[, i] ~ dat$Species, # draw boxplots by group
ylab = names(dat[i]), # rename y-axis with variable's name
xlab = "Species"
)
print(t.test(dat[, i] ~ dat$Species)) # print results of t-test
}
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
#install.packages('reticulate')
library(reticulate)
#py_install(packages = "matplotlib")
#use_python('/usr/bin/python3')
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
#install.packages('reticulate')
remotes::install_github("rstudio/reticulate")
#install.packages('reticulate')
pkgbuild::check_build_tools(debug=TRUE)
install.packages('remotes')
blogdown:::preview_site(startup = TRUE)
install.packages("remotes")
#install.packages('remotes')
#install.packages('reticulate')
remotes::install_github("rstudio/reticulate")
#install.packages('remotes')
#install.packages('reticulate')
devtools::install_github("rstudio/reticulate")
#install.packages('remotes')
#install.packages('reticulate')
library(devtools)
#install.packages('remotes')
#install.packages('reticulate')
install.packages('usethis')
blogdown:::preview_site(startup = TRUE)
install.packages("usethis")
#install.packages('remotes')
#install.packages('reticulate')
#install.packages('usethis')
library(devtools)
#install.packages('remotes')
#install.packages('reticulate')
#install.packages('usethis')
library(devtools)
devtools::install_github("rstudio/reticulate")
#install.packages('remotes')
#install.packages('reticulate')
#install.packages('usethis')
library(devtools)
devtools::install_github("rstudio/reticulate")
#install.packages('remotes')
#install.packages('reticulate')
#install.packages('usethis')
library(reticulate)
use_python("/usr/local/bin/python")
#py_install(packages = "matplotlib")
#use_python('/usr/bin/python3')
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
#install.packages('remotes')
#install.packages('reticulate')
#install.packages('usethis')
library(reticulate)
use_python("/usr/local/bin/python3")
#py_install(packages = "matplotlib")
#use_python('/usr/bin/python3')
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
#install.packages('remotes')
install.packages('reticulate')
blogdown:::preview_site(startup = TRUE)
install.packages("reticulate")
#install.packages('remotes')
#install.packages('reticulate')
#install.packages('usethis')
library(reticulate)
use_python("/usr/local/bin/python3")
#py_install(packages = "matplotlib")
#use_python('/usr/bin/python3')
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
pip install matplotlib==3.2
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
blogdown:::preview_site()
blogdown:::preview_site()
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
#install.packages('remotes')
#install.packages('reticulate')
#install.packages('usethis')
library(reticulate)
use_python("/usr/local/bin/python3")
#py_install(packages = "matplotlib")
#use_python('/usr/bin/python3')
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
#install.packages('remotes')
#install.packages('reticulate')
#install.packages('usethis')
library(reticulate)
use_python("/usr/bin/python3")
#py_install(packages = "matplotlib")
#use_python('/usr/bin/python3')
knitr::opts_chunk$set(
fig.align = "center",
out.width='100%'
)
knitr::opts_chunk$set(echo = TRUE)
#install.packages('remotes')
#install.packages('reticulate')
#install.packages('usethis')
library(reticulate)
use_python("/usr/bin/python")
#py_install(packages = "matplotlib")
#use_python('/usr/bin/python3')
blogdown:::preview_site()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# R code example
dat <- iris
# remove one level to have only two groups
dat <- subset(dat, Species != "setosa")
dat$Species <- factor(dat$Species)
dim(dat)
summary(dat)
boxplot(dat[, 1] ~ dat$Species, # draw boxplots by group
ylab = names(dat[1]), # rename y-axis with variable's name
xlab = "Species"
)
knitr::opts_chunk$set(echo = TRUE)
blogdown:::preview_site()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#install.packages('remotes')
#install.packages('reticulate')
#install.packages('usethis')
library(reticulate)
use_python('/Users/master/Library/r-miniconda/envs/r-reticulate/bin/python')
#py_install(packages = "matplotlib")
#use_python('/usr/bin/python3')
blogdown:::preview_site(startup = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# R code example
dat <- iris
# remove one level to have only two groups
dat <- subset(dat, Species != "setosa")
dat$Species <- factor(dat$Species)
dim(dat)
summary(dat)
boxplot(dat[, 1] ~ dat$Species, # draw boxplots by group
ylab = names(dat[1]), # rename y-axis with variable's name
xlab = "Species"
)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# R code example
dat <- iris
# remove one level to have only two groups
dat <- subset(dat, Species != "setosa")
dat$Species <- factor(dat$Species)
dim(dat)
summary(dat)
boxplot(dat[, 1] ~ dat$Species, # draw boxplots by group
ylab = names(dat[1]), # rename y-axis with variable's name
xlab = "Species"
title = 'R example'
knitr::opts_chunk$set(echo = TRUE)
# R code example
dat <- iris
# remove one level to have only two groups
dat <- subset(dat, Species != "setosa")
dat$Species <- factor(dat$Species)
dim(dat)
summary(dat)
boxplot(dat[, 1] ~ dat$Species, # draw boxplots by group
ylab = names(dat[1]), # rename y-axis with variable's name
xlab = "Species",
title = 'R example'
)
knitr::opts_chunk$set(echo = TRUE)
# R code example
dat <- iris
# remove one level to have only two groups
dat <- subset(dat, Species != "setosa")
dat$Species <- factor(dat$Species)
dim(dat)
summary(dat)
boxplot(dat[, 1] ~ dat$Species, # draw boxplots by group
ylab = names(dat[1]), # rename y-axis with variable's name
xlab = "Species"
)
title('R example')
blogdown:::preview_site()
blogdown:::stop_server()
blogdown:::preview_site()
blogdown:::preview_site()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
install.packages('Rcpp')
blogdown:::preview_site(startup = TRUE)
install.packages("Rcpp")
blogdown:::preview_site(startup = TRUE)
install.packages("Rcpp")
blogdown:::preview_site(startup = TRUE)
install.packages("Rcpp")
install.packages("Rcpp")
knitr::opts_chunk$set(echo = TRUE)
#install.packages('Rcpp')
library(Rcpp)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# R code example
dat <- iris
# remove one level to have only two groups
dat <- subset(dat, Species != "setosa")
dat$Species <- factor(dat$Species)
dim(dat)
boxplot(dat[, 1] ~ dat$Species, # draw boxplots by group
ylab = names(dat[1]), # rename y-axis with variable's name
xlab = "Species"
)
title('R example')
blogdown:::preview_site()
blogdown:::stop_server()
blogdown:::stop_server()
blogdown:::preview_site()
blogdown:::new_post_addin()
blogdown:::preview_site(startup = TRUE)
blogdown:::stop_server()
blogdown:::preview_site()
blogdown:::stop_server()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::stop_server()
blogdown:::preview_site()
blogdown:::stop_server()
blogdown:::stop_server()
blogdown:::preview_site()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::serve_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::serve_site()
blogdown::update_hugo()
blogdown::hugo_version()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::build_site()
blogdown:::serve_site()
blogdown:::build_site()
blogdown:::build_site()
blogdown::hugo_version()
blogdown:::new_post_addin()
