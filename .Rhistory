width = 6,
height = 6)
df_dg %>%
ggplot(., aes(x=dg2, y=Mean, fill=dg2))+
geom_bar(stat='identity', show.legend=FALSE)+
geom_errorbar(aes(ymin=Mean-SEM, ymax = Mean+SEM), width=0.2)+
geom_signif(inherit.aes = FALSE, data = res2_df,
aes(xmin=group1, xmax = group2,
annotations = labels,
y_position=c(seq(320, 650, length.out = 6)),
tip_length = 0.01
),
vjust=-0.2,
textsize = 3,
manual=TRUE
)+
labs(y='평균',title='집단/성별 & Wilcoxon')+
expand_limits(y=c(NA,700))+
geom_text(aes(label=paste('n =',Nb)), vjust=-0.5, hjust=1.5, size=3,
inherit.aes = TRUE)+
theme_bw() +
scale_x_discrete(name='')+
ggsave('/Users/master/Documents/Taeho/plot/집단_성별_Wilcoxon_plot.png',
width = 6,
height = 6)
df_dg %>%
ggplot(., aes(x=dg2, y=Mean, fill=dg2))+
geom_bar(stat='identity', show.legend=FALSE)+
geom_errorbar(aes(ymin=Mean-SEM, ymax = Mean+SEM), width=0.2)+
geom_signif(inherit.aes = FALSE, data = res3_df,
aes(xmin=group1, xmax = group2,
annotations = labels,
y_position=c(seq(320, 650, length.out = 6)),
tip_length = 0.01
),
vjust=-0.2,
textsize = 3,
manual=TRUE
)+
labs(y='평균',title='집단/성별 & Dunn')+
expand_limits(y=c(NA,700))+
geom_text(aes(label=paste('n =',Nb)), vjust=-0.5, hjust=1.5, size=3,
inherit.aes = TRUE)+
theme_bw() +
scale_x_discrete(name='')+
ggsave('/Users/master/Documents/Taeho/plot/집단_성별_Dunn_plot.png',
width = 6,
height = 6)
df_dg = df_all %>%
group_by(dg3) %>%
summarise(Mean = mean(value),
SEM = sd(value)/sqrt(n()),
Nb = n()) %>%
rowwise() %>%
mutate(Labels = as.character(dg3)) %>%
mutate(Labels = paste0(Labels,"\nn = ",Nb))
df_dg
anova.fit <- aov(formula = value ~ dg3, data = df_all)
#summary(anova.fit)
t <- TukeyHSD(anova.fit)
stat <- t$dg3
res_df <- stat %>% as.data.frame() %>%
mutate(Variable = "dg3") %>%
mutate(Group = rownames(stat)) %>%
rowwise() %>%
mutate(group1 = unlist(strsplit(Group,"-"))[1]) %>%
mutate(group2 = unlist(strsplit(Group,"-"))[2]) %>%
mutate(labels = paste('p-val = ', round(`p adj`,3))) %>%
mutate(colors = ifelse(test = round(`p adj`,3)<0.1, 'a', 'e'))
kw = kruskal.test(value ~ dg3,
data = df_all)
print(kw)
res2 = pairwise.wilcox.test(df_all$value, df_all$dg3,
p.adjust.method = "BH")
ind = which(lower.tri(res2$p.value, diag=TRUE), arr.ind = TRUE)
res2_df = data.frame(group1 = dimnames(res2$p.value)[[2]][ind[,2]],
group2 = dimnames(res2$p.value)[[1]][ind[,1]],
labels = paste('p-val = ', round(res2$p.value[ ind ], 3)))
print(res2_df)
res3 = dunnTest(df_all$value, df_all$dg3,
method = 'bh')
print(res3)
res3_df = res3$res %>% as.data.frame() %>%
rowwise() %>%
mutate(group1 = unlist(strsplit(Comparison," - "))[1]) %>%
mutate(group2 = unlist(strsplit(Comparison," - "))[2]) %>%
mutate(labels = paste('p-val = ', round(`P.adj`,3))) %>%
select(group1, group2, labels) %>%
arrange(group1)
df_dg %>%
ggplot(., aes(x=dg3, y=Mean, fill=dg3))+
geom_bar(stat='identity', show.legend=FALSE)+
geom_errorbar(aes(ymin=Mean-SEM, ymax = Mean+SEM), width=0.2)+
geom_signif(inherit.aes = FALSE, data = res_df,
aes(xmin=group1, xmax = group2,
annotations = labels,
#color=colors,
y_position=c(seq(350, 650, length.out = 6)),
tip_length = 0.01,
),
show.legend = FALSE,
vjust=-0.2,
textsize = 3,
manual=TRUE
)+
labs(y='평균',title='거리/성별 & T-test')+
expand_limits(y=c(NA,700))+
geom_text(aes(label=paste('n =',Nb)), vjust=-0.5, hjust=1.5, size=3,
inherit.aes = TRUE)+
theme_bw() +
scale_x_discrete(name='')+
ggsave('/Users/master/Documents/Taeho/plot/거리_성별_t_test_plot.png',
width = 6,
height = 6)
df_dg %>%
ggplot(., aes(x=dg3, y=Mean, fill=dg3))+
geom_bar(stat='identity', show.legend=FALSE)+
geom_errorbar(aes(ymin=Mean-SEM, ymax = Mean+SEM), width=0.2)+
geom_signif(inherit.aes = FALSE, data = res2_df,
aes(xmin=group1, xmax = group2,
annotations = labels,
#color=colors,
y_position=c(seq(350, 650, length.out = 6)),
tip_length = 0.01,
),
show.legend = FALSE,
vjust=-0.2,
textsize = 3,
manual=TRUE
)+
labs(y='평균',title='거리/성별 & Wilcoxon')+
expand_limits(y=c(NA,700))+
geom_text(aes(label=paste('n =',Nb)), vjust=-0.5, hjust=1.5, size=3,
inherit.aes = TRUE)+
theme_bw() +
scale_x_discrete(name='')+
ggsave('/Users/master/Documents/Taeho/plot/거리_성별_Wilcoxon_plot.png',
width = 6,
height = 6)
df_dg %>%
ggplot(., aes(x=dg3, y=Mean, fill=dg3))+
geom_bar(stat='identity', show.legend=FALSE)+
geom_errorbar(aes(ymin=Mean-SEM, ymax = Mean+SEM), width=0.2)+
geom_signif(inherit.aes = FALSE, data = res3_df,
aes(xmin=group1, xmax = group2,
annotations = labels,
#color=colors,
y_position=c(seq(350, 650, length.out = 6)),
tip_length = 0.01,
),
show.legend = FALSE,
vjust=-0.2,
textsize = 3,
manual=TRUE
)+
labs(y='평균',title='거리/성별 & Dunn')+
expand_limits(y=c(NA,700))+
geom_text(aes(label=paste('n =',Nb)), vjust=-0.5, hjust=1.5, size=3,
inherit.aes = TRUE)+
theme_bw() +
scale_x_discrete(name='')+
ggsave('/Users/master/Documents/Taeho/plot/거리_성별_Dunn_plot.png',
width = 6,
height = 6)
df_dg = df_char %>%
group_by(char) %>%
summarise(Mean = mean(value),
SEM = sd(value)/sqrt(n()),
Nb = n()) %>%
rowwise() %>%
mutate(Labels = as.character(char)) %>%
mutate(Labels = paste0(Labels,"\nn = ",Nb))
df_dg
#levels(as.factor(df_char$char))
df$char = as.factor(df$char)
#df$char
res = aov(value ~ char, data = df_char)
anova.fit <- aov(formula = value ~ char, data = df_all)
#summary(anova.fit)
t <- TukeyHSD(anova.fit)
stat <- t$char
res_df <- stat %>% as.data.frame() %>%
mutate(Variable = "char") %>%
mutate(Group = rownames(stat)) %>%
rowwise() %>%
mutate(group1 = unlist(strsplit(Group,"-"))[1]) %>%
mutate(group2 = unlist(strsplit(Group,"-"))[2]) %>%
mutate(labels = paste('p-val = ', round(`p adj`,3))) %>%
mutate(colors = ifelse(test = round(`p adj`,3)<0.1, 'a', 'e'))
kw = kruskal.test(value ~ char,
data = df_char)
print(kw)
res2 = pairwise.wilcox.test(df_char$value, df_char$char,
p.adjust.method = "BH")
ind = which(lower.tri(res2$p.value, diag=TRUE), arr.ind = TRUE)
res2_df = data.frame(group1 = dimnames(res2$p.value)[[2]][ind[,2]],
group2 = dimnames(res2$p.value)[[1]][ind[,1]],
labels = paste('p-val = ', round(res2$p.value[ ind ], 3)))
res2_df
res3 = dunnTest(df_char$value, df_char$char,
method = 'bh')
res3
res3_df = res3$res %>% as.data.frame() %>%
rowwise() %>%
mutate(group1 = unlist(strsplit(Comparison," - "))[1]) %>%
mutate(group2 = unlist(strsplit(Comparison," - "))[2]) %>%
mutate(labels = paste('p-val = ', round(`P.adj`,3))) %>%
select(group1, group2, labels) %>%
arrange(group1)
df_dg %>%
ggplot(., aes(x=char, y=Mean, fill=char))+
geom_bar(stat='identity', show.legend=FALSE)+
geom_errorbar(aes(ymin=Mean-SEM, ymax = Mean+SEM), width=0.2)+
geom_signif(inherit.aes = FALSE, data = res_df,
aes(xmin=group1, xmax = group2,
annotations = labels,
#color=colors,
y_position=c(seq(450, 1000, length.out = 10)),
tip_length = 0.01,
),
show.legend = FALSE,
vjust=-0.2,
textsize = 3,
manual=TRUE
)+
labs(y='평균',title='성격 & T-test')+
expand_limits(y=c(NA,700))+
geom_text(aes(label=paste('n =',Nb)), vjust=-1.2, hjust=1.7, size=3,
inherit.aes = TRUE)+
theme_bw() +
scale_x_discrete(name='')+
ggsave('/Users/master/Documents/Taeho/plot/성격_t_test_plot.png',
width = 6,
height = 6)
df_dg %>%
ggplot(., aes(x=char, y=Mean, fill=char))+
geom_bar(stat='identity', show.legend=FALSE)+
geom_errorbar(aes(ymin=Mean-SEM, ymax = Mean+SEM), width=0.2)+
geom_signif(inherit.aes = FALSE, data = res2_df,
aes(xmin=group1, xmax = group2,
annotations = labels,
#color=colors,
y_position=c(seq(450, 1000, length.out = 10)),
tip_length = 0.01,
),
show.legend = FALSE,
vjust=-0.2,
textsize = 3,
manual=TRUE
)+
labs(y='평균',title='성격 & Wilcoxon')+
expand_limits(y=c(NA,700))+
geom_text(aes(label=paste('n =',Nb)), vjust=-1.2, hjust=1.7, size=3,
inherit.aes = TRUE)+
theme_bw() +
scale_x_discrete(name='')+
ggsave('/Users/master/Documents/Taeho/plot/성격_Wilcoxon_plot.png',
width = 6,
height = 6)
df_dg %>%
ggplot(., aes(x=char, y=Mean, fill=char))+
geom_bar(stat='identity', show.legend=FALSE)+
geom_errorbar(aes(ymin=Mean-SEM, ymax = Mean+SEM), width=0.2)+
geom_signif(inherit.aes = FALSE, data = res3_df,
aes(xmin=group1, xmax = group2,
annotations = labels,
#color=colors,
y_position=c(seq(450, 1000, length.out = 10)),
tip_length = 0.01,
),
show.legend = FALSE,
vjust=-0.2,
textsize = 3,
manual=TRUE
)+
labs(y='평균',title='성격 & Dunn')+
expand_limits(y=c(NA,700))+
geom_text(aes(label=paste('n =',Nb)), vjust=-1.2, hjust=1.7, size=3,
inherit.aes = TRUE)+
theme_bw() +
scale_x_discrete(name='')+
ggsave('/Users/master/Documents/Taeho/plot/성격_Dunn_plot.png',
width = 6,
height = 6)
blogdown:::preview_site(startup = TRUE)
blogdown::build_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
blogdown:::new_post_addin()
library('readxl')
setwd("C:/Users/ericr/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회")
setwd("C:/Users/ericr/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회")
list.files()
wd = "C:/Users/ericr/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회"
setwd("C:/Users/ericr/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회")
list.files(wd)
wd = "C:/Users/ericr/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회"
setwd(wd)
list.files(getwd())
wd = "C:/Users/ericr/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회"
setwd(wd)
gwtwd(
)
gwtwd()
getwd()
list.files(wd)
fn = list.files(path = wd,
pattern = '*.xlsm')
fn
fn = list.files(path = wd,
pattern = '*.xlsm')
fn
fn = list.files(path = wd,
pattern = '*실습파일일.xlsm')
fn
fn = list.files(path = wd,
pattern = '*/실습파일일.xlsm')
fn
fn = list.files(path = wd,
pattern = '\\.실습파일.xlsm')
fn
fn = list.files(path = wd,
pattern = '*실습파일\\.xlsm')
fn
fn = list.files(path = wd,
pattern = '*실습파일.xlsm')
fn
file = paste(wd,fn,sep = '/')
file
df = read_xlsx(file)
df
file
library(readxl)
excel_sheets(file)
sheets
sheets = excel_sheets(file)
sheets
library(readxl)
tab_names = excel_sheets(file)
print(tab_names)
list_all = lapply(tab_names,
function(x) read_excel(path = path,
sheet = x))
wd = "C:/Users/ericr/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회"
fn = list.files(path = wd,
pattern = '*실습파일.xlsm')
path = paste(wd,fn,sep = '/')
print(path)
library(readxl)
tab_names = excel_sheets(file)
print(tab_names)
list_all = lapply(tab_names,
function(x) read_excel(path = path,
sheet = x))
list_all
library(readxl)
tab_names = excel_sheets(file)
print(tab_names)
list_all = lapply(tab_names,
function(x) read_excel(path = path,
sheet = x,))
list_all
str(list_all)
summary(list_all)
모든 sheets을 list 안에다 집어넣기
```{r}
library(readxl)
tab_names = excel_sheets(file)
print(tab_names)
list_all = lapply(tab_names,
function(x) read_excel(path = path,
sheet = x,))
summary(list_all)
```
list_all[[1]]
list_all[[1]]
list_all[[1]]
wd = "C:/Users/ericr/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회"
fn = list.files(path = wd,
pattern = '*실습파일.xlsm')
path = paste(wd,fn,sep = '/')
print(path)
library(readxl)
tab_names = excel_sheets(file)
print(tab_names)
list_all = lapply(tab_names,
function(x) read_excel(path = path,
sheet = x,))
summary(list_all)
list_all[[1]]
path
wd = "C:/Users/ericr/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회"
fn = list.files(path = wd,
pattern = '*실습파일.xlsm')
path = paste(wd,fn,sep = '/')
print(path)
library(readxl)
tab_names = excel_sheets(file)
library(readxl)
tab_names = excel_sheets(path)
print(tab_names)
list_all = lapply(tab_names,
function(x) read_excel(path = path,
sheet = x,))
summary(list_all)
list_all[[1]]
df1 = list_all[[1]]
library(dplyr)
library(readxl) # read excel
library(dplyr)
df1 = list_all[[1]]
glimpse(df1)
df1 = list_all[[1]]
glimpse(df1)
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site()
library(readxl) # read excel
library(dplyr)
wd = "C:/Users/ericr/Dropbox/컴활1급실기/1-2016버전 엑셀/1-출제유형분석1회"
fn = list.files(path = wd,
pattern = '*실습파일.xlsm')
path = paste(wd,fn,sep = '/')
print(path)
library(readxl)
tab_names = excel_sheets(path)
print(tab_names)
list_all = lapply(tab_names,
function(x) read_excel(path = path,
sheet = x,))
summary(list_all)
df1 = list_all[[1]]
glimpse(df1)
df_q1 = df1 %>%
filter(직위 = "과장" || 직위 = "사원") %>%
df_q1 = df1 %>%
dplyr::filter(직위 =="과장" || 직위 == "사원") %>%
dplyr::filter(점수 >= 80)
df_q1
df1 %>%
dplyr::filter(직위 =="과장" || 직위 == "사원")
df1 %>%
dplyr::filter(직위 =="과장" | 직위 == "사원")
df1 %>%
dplyr::filter(직위 =="과장" | 직위 == "사원") %>%
dplyr::filter(점수 >= 80)
df1 %>%
filter(직위 =="과장" | 직위 == "사원") %>% # 직위가 과장이거나 사원
filter(점수 >= 80) %>% # 점수가 80이상
select(이름, 부서명, 직위, 점수, 평가)
df1 %>%
# 직위가 과장이거나, 직위가 사원이고 점수가 80이상인
filter( (직위 =="과장") | (직위 == "사원" & 점수 >= 80)) %>%
# 이름, 부서명, 직위, 점수 평가열 (Column) 선택
select(이름, 부서명, 직위, 점수, 평가)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::stop_server()
blogdown:::stop_server()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
<style>
div.blue pre { background-color:lightblue; }
div.blue pre.r { background-color:blue; }
</style>
**이 페이지는 컵활 1급의 Excel 예제를 그대로 R과 Python에서 해보는 것을 목적으로 하고 있습니다. 오류와 수정사항 그리고 교육문의는 metrics@kakao.com으로 메일주시면 감사하겠습니다**
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
install.packages('reticulate')
py_install(packages = "matplotlib")
library(reticulate)
py_install(packages = "matplotlib")
$ conda update -n base -c defaults conda
conda update -n base -c defaults conda
#install.packages('reticulate')
library(reticulate)
#py_install(packages = "matplotlib")
knitr::opts_chunk$set(echo = TRUE)
#install.packages('reticulate')
library(reticulate)
#py_install(packages = "matplotlib")
#install.packages('reticulate')
library(reticulate)
#py_install(packages = "matplotlib")
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site()
#install.packages('reticulate')
library(reticulate)
#py_install(packages = "matplotlib")
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
#install.packages('reticulate')
library(reticulate)
#py_install(packages = "matplotlib")
blogdown:::preview_site()
blogdown::stop_server()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
