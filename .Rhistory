colnames(stock_df) = df3$종목명
df_final = as.data.table(stock_df)
df_melt = melt(df_final, measure.vars=2:21)
colnames(df_melt)=c('날짜','종목명','종가')
df_melt %>%
ggplot(., aes(x = 날짜, y=종가, group=종목명)) +
geom_hline(data = df3, aes(yintercept=adj_p_Nov11), col='red') +
geom_line() +
labs(title = " Dividend Stocks Dec4 - Dec24  @rockandroh.com",
subtitle = " Red line refers to the closing price of each stock at Nov11 when the est. DPS was publicized. \n Front (end) number is the rank (value) of est. dividend rate calculated based on Dec24 \n",
y = "Closing Price", x = "") +
coord_x_date(xlim = c(start, end)) +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
facet_wrap(~종목명, ncol = 5, scale = "free_y") +
theme_void() +
theme(strip.background = element_rect(fill="white", colour="blue",size=1)) +
theme(strip.text.x = element_text(margin = margin(.1, 0, .1, 0, "cm"))) +
theme(plot.margin = unit(c(0.2,0.2,0.2,0.2), "cm"))
colnames(stock_df) = df3$종목명
df_final = as.data.table(stock_df)
df_melt = melt(df_final, measure.vars=2:21)
colnames(df_melt)=c('날짜','종목명','종가')
df_melt %>%
ggplot(., aes(x = 날짜, y=종가, group=종목명)) +
geom_hline(data = df3, aes(yintercept=adj_p_Nov11), col='red') +
geom_line() +
labs(title = " Dividend Stocks Dec4 - Dec24  @rockandroh.com",
subtitle = " Red line refers to the closing price of each stock at Nov11 when the est. DPS was publicized. \n Front (end) number is the rank (value) of est. dividend rate newly calculated based on Dec24 \n",
y = "Closing Price", x = "") +
coord_x_date(xlim = c(start, end)) +
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
facet_wrap(~종목명, ncol = 5, scale = "free_y") +
theme_void() +
theme(strip.background = element_rect(fill="white", colour="blue",size=1)) +
theme(strip.text.x = element_text(margin = margin(.1, 0, .1, 0, "cm"))) +
theme(plot.margin = unit(c(0.2,0.2,0.2,0.2), "cm"))
>>>>>>> 4606bc55c59d8c24ae6d9d82950cfee435bae8cd
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
P = seq(2,14,2)
P
P = seq(14,2,2)
P
P = seq(14,2,2)
P = seq(from = 14, to = 2, by = 2)
P = seq(from = 14, to = 2, by = -2)
P
Q = seq(0, 6, 1)
TR = P%*%Q
TR
TR = P%*%t(Q)
TR
TR =t(P)%*%Q
TR
TR = P*Q
TR
MR = diff(TR)
MR
MR = rbind(NA,diff(TR))
MR
MR = c(NA,diff(TR))
MR
df = as.data.frame(P,Q,TR,MR)
P = seq(from = 14, to = 2, by = -2)
Q = seq(0, 6, 1)
TR = P*Q # elementwise multiplication
MR = c(NA,diff(TR))
df = as.data.frame(P,Q,TR,MR)
df
df = as.data.frame(cbind(P,Q,TR,MR))
df
library(DT)
library(DT)
P = seq(from = 14, to = 2, by = -2)
Q = seq(0, 6, 1)
TR = P*Q # elementwise multiplication
MR = c(NA,diff(TR))
df = as.data.frame(cbind(P,Q,TR,MR))
datatable(df)
library(DT)
P = seq(from = 14, to = 2, by = -2)
Q = seq(0, 6, 1)
TR = P*Q # elementwise multiplication
MR = c(NA,diff(TR))
df = as.data.frame(cbind(P,Q,TR,MR))
datatable(df, rownames = FALSE)
library(ggplot2)
df[1:nrow(df),]
library(ggplot2)
ggplot(data=df[2:nrow(df),], aes(x=Q, y=P)) +
geom_line()
library(ggplot2)
ggplot(data=df[2:nrow(df),], aes(x=Q, y=P)) +
geom_line(col='blue') +
theme_bw()
library(ggplot2)
ggplot(data=df[2:nrow(df),], aes(x=Q, y=P)) +
geom_line(col='blue') +
theme_bw() +
geom_line(x=Q, Y=MR, col='red')
library(ggplot2)
ggplot(data=df[2:nrow(df),], aes(x=Q, y=P)) +
geom_line(col='blue') +
theme_bw() +
geom_line(aes(x=Q, Y=MR), col='red')
library(ggplot2)
ggplot(data=df[2:nrow(df),], aes(x=Q, y=P)) +
geom_line(col='blue') +
theme_bw() +
geom_line(Y=MR, col='red')
library(ggplot2)
ggplot(data=df[2:nrow(df),], aes(x=Q)) +
geom_line(y=P, col='blue') +
theme_bw() +
geom_line(y=MR, col='red')
ggplot(data=df[1:nrow(df),], aes(x=Q)) +
geom_line(y=P, col='blue') +
theme_bw() +
geom_line(y=MR, col='red')
library(ggplot2)
ggplot(data=df[1:nrow(df),], aes(x=Q)) +
geom_line(y=P, col='blue') +
theme_bw() +
geom_line(y=MR, col='red')
library(ggplot2)
df[2:nrow(df)] %>%
ggplot(., aes(x=Q)) +
geom_line(y=P, col='blue') +
theme_bw() +
geom_line(y=MR, col='red')
library(ggplot2)
df[2:nrow(df),] %>%
ggplot(., aes(x=Q)) +
geom_line(y=P, col='blue') +
theme_bw() +
geom_line(y=MR, col='red')
df[2:nrow(df),] %>%
ggplot(., aes(x=Q))
df[2:nrow(df),]
library(ggplot2)
df[2:nrow(df),] %>%
ggplot(., aes(x=Q)) +
geom_line(y=P, col='blue') +
geom_line(y=MR, col='red')
df[2:nrow(df),]
library(DT)
P = seq(from = 14, to = 2, by = -2)
Q = seq(0, 6, 1)
TR = P*Q # elementwise multiplication
MR = c(0,diff(TR))
df = as.data.frame(cbind(P,Q,TR,MR))
datatable(df, rownames = FALSE)
library(ggplot2)
df%>%
ggplot(., aes(x=Q)) +
geom_line(y=P, col='blue') +
geom_line(y=MR, col='red')
library(ggplot2)
df%>%
ggplot(., aes(x=Q)) +
geom_line(y=MR, col='red') +
geom_line(y=P, col='blue')
df%>%
ggplot(., aes(x=Q)) +
geom_line(y=MR, col='red')
df%>%
ggplot(., aes(x=Q)) +
geom_line(y=P, col='blue')
library(ggplot2)
df%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=P), col='blue')
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red')
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
theme_minimal()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_curve(aes(y=TR), col='orange')+
theme_minimal()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
theme_minimal()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
theme_classic()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
theme_void()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
theme_update()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
theme_dark()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
theme_get()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
theme_gray()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
theme_light()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
theme_replace()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
theme_test()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
theme_bw()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_smooth(aes(y=TR), col='orange') +
theme_bw()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_smooth(aes(y=TR), col='orange', method = "loess") +
theme_bw()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_smooth(aes(y=TR), col='orange', method = "loess") +
theme_bw()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_smooth(aes(y=TR), col='orange', method = 'lm') +
theme_bw()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_smooth(aes(y=TR), col='orange', method = 'lm', formula = y ~ poly(x, 2), se = FALS) +
theme_bw()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_smooth(aes(y=TR), col='orange', method = 'lm', formula = y ~ poly(x, 2), se = FALSE) +
theme_bw()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_smooth(aes(y=TR), col='orange', method = 'lm', formula = y ~ poly(x, 3), se = FALSE) +
theme_bw()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_smooth(aes(y=TR), col='orange', method = 'lm', formula = y ~ poly(x, 4), se = FALSE) +
theme_bw()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_smooth(aes(y=TR), col='orange', method = 'lm', formula = y ~ poly(x, 2), se = FALSE) +
theme_bw()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
#geom_smooth(aes(y=TR), col='orange', method = 'lm', formula = y ~ poly(x, 2), se = FALSE) +
theme_bw()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
geom_line(aes(x=4))
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
geom_line(x=4)
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
geom_abline(x=4)+
#geom_smooth(aes(y=TR), col='orange', method = 'lm', formula = y ~ poly(x, 2), se = FALSE) +
theme_bw()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
geom_abline(h=4)+
#geom_smooth(aes(y=TR), col='orange', method = 'lm', formula = y ~ poly(x, 2), se = FALSE) +
theme_bw()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
geom_vline(x=4)+
#geom_smooth(aes(y=TR), col='orange', method = 'lm', formula = y ~ poly(x, 2), se = FALSE) +
theme_bw()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
geom_vline(aes(x=4))+
#geom_smooth(aes(y=TR), col='orange', method = 'lm', formula = y ~ poly(x, 2), se = FALSE) +
theme_bw()
library(ggplot2)
df[2:nrow(df),]%>%
ggplot(., aes(x=Q)) +
geom_line(aes(y=P), col='blue') +
geom_line(aes(y=MR), col='red') +
geom_line(aes(y=TR), col='orange') +
geom_vline(xintercept = 4)+
#geom_smooth(aes(y=TR), col='orange', method = 'lm', formula = y ~ poly(x, 2), se = FALSE) +
theme_bw()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site(startup = TRUE)
wd = "G:/공유 드라이브/Project_TBD/Stock_Data/real_time/kiwoom_stocks/2021-01-12"
fn = list.files(path = wd,
pattern = '.*stocks_trade.*.*_15.*\\.csv') # 마지막 30분 틱데이터 가지고오기
path = paste(wd,fn,sep = '/')
data = readr::read_csv(file = path,
col_names = c('code','trade_date','timestamp','price','open','high','low',
'size','cum_size','ask1','bid1'))
sum(is.na(data))
blogdown:::preview_site(startup = TRUE)
x = seq(5, 10, 100)
x
x = seq(5, 10, length.out = 100)
x
blogdown:::new_post_addin()
library(dplyr)
library(tidyverse)
library(DT)
library(reticulate) # Python
#py_install(packages = "matplotlib")
#py_install(packages = "pandas")
#py_install(packages = 'dfply')
options(scipen=999)
options(max.print = 99999999)
options(digits=10)
wd = "G:/공유 드라이브/Project_TBD/Stock_Data/real_time/kiwoom_stocks/2021-01-14"
wd2 = "/Volumes/GoogleDrive/공유 드라이브/Project_TBD/Stock_Data/real_time/kiwoom_stocks/2021-01-18"
fn = list.files(path = wd2,
pattern = '.*stocks_trade.*\\.csv') # 마지막 30분 틱데이터 가지고오기
path = paste(wd2,fn,sep = '/')
# data = readr::read_csv(file = path,
#                        col_names = c('code','trade_date','timestamp','price','open','high','low',
#                                      'size','cum_size','ask1','bid1'))
tbl =
list.files(path = wd2, pattern = '.*stocks_trade.*\\.csv') %>%
map_df(~readr::read_csv(paste(wd2,.,sep = '/'),
col_names = c('code','trade_date','timestamp','price','open','high','low',
'size','cum_size','ask1','bid1') ))
sum(is.na(tbl))
rm(list = "tbl")
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
blogdown:::preview_site(startup = TRUE)
blogdown:::preview_site()
wd = "G:/공유 드라이브/Project_TBD/Stock_Data/real_time/kiwoom_stocks/2021-01-14"
wd2 = "/Volumes/GoogleDrive/공유 드라이브/Project_TBD/Stock_Data/real_time/kiwoom_stocks/2021-01-18"
fn = list.files(path = wd2,
pattern = '.*stocks_trade.*\\.csv') # 마지막 30분 틱데이터 가지고오기
path = paste(wd2,fn,sep = '/')
# data = readr::read_csv(file = path,
#                        col_names = c('code','trade_date','timestamp','price','open','high','low',
#                                      'size','cum_size','ask1','bid1'))
tbl =
list.files(path = wd2, pattern = '.*stocks_trade.*\\.csv') %>%
map_df(~readr::read_csv(paste(wd2,.,sep = '/'),
col_names = c('code','trade_date','timestamp','price','open','high','low',
'size','cum_size','ask1','bid1') ))
library(dplyr)
library(tidyverse)
library(DT)
library(reticulate) # Python
#py_install(packages = "matplotlib")
#py_install(packages = "pandas")
#py_install(packages = 'dfply')
options(scipen=999)
options(max.print = 99999999)
options(digits=10)
wd = "G:/공유 드라이브/Project_TBD/Stock_Data/real_time/kiwoom_stocks/2021-01-14"
wd2 = "/Volumes/GoogleDrive/공유 드라이브/Project_TBD/Stock_Data/real_time/kiwoom_stocks/2021-01-18"
fn = list.files(path = wd2,
pattern = '.*stocks_trade.*\\.csv') # 마지막 30분 틱데이터 가지고오기
path = paste(wd2,fn,sep = '/')
# data = readr::read_csv(file = path,
#                        col_names = c('code','trade_date','timestamp','price','open','high','low',
#                                      'size','cum_size','ask1','bid1'))
tbl =
list.files(path = wd2, pattern = '.*stocks_trade.*\\.csv') %>%
map_df(~readr::read_csv(paste(wd2,.,sep = '/'),
col_names = c('code','trade_date','timestamp','price','open','high','low',
'size','cum_size','ask1','bid1') ))
sum(is.na(tbl))
blogdown:::preview_site()
blogdown:::preview_site()
wd2 = "/Volumes/GoogleDrive/공유 드라이브/Project_TBD/Stock_Data/real_time/kiwoom_stocks/2021-01-18"
fn = list.files(path = wd2,
pattern = '.*stocks_trade.*\\.csv') # 마지막 30분 틱데이터 가지고오기
path = paste(wd2,fn[1:4],sep = '/')
path
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown::build_site()
blogdown:::preview_site(startup = TRUE)
